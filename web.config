<?xml version="1.0" encoding="utf-8"?>
<!--
  This web.config is required for Azure Web Apps to properly handle Node.js applications.
  It configures IISNode to serve the Node.js application.
-->
<configuration>
  <system.webServer>
    <!-- Indicates that the app is a Node.js application -->
    <handlers>
      <add name="iisnode" path="dist/index.js" verb="*" modules="iisnode"/>
    </handlers>
    
    <!-- URL rewrite rules to route all requests to Node.js -->
    <rewrite>
      <rules>
        <!-- Don't interfere with node-inspector -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^dist/index.js\/debug[\/]?" />
        </rule>
        
        <!-- All other URLs are mapped to the Node.js application entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="dist/index.js"/>
        </rule>
      </rules>
    </rewrite>
    
    <!-- Configure Node.js environment -->
    <iisnode
      node_env="%node_env%"
      nodeProcessCommandLine="node"
      watchedFiles="web.config;*.js"
      loggingEnabled="true"
      logDirectoryNameSuffix="logs"
      debuggingEnabled="false"
      devErrorsEnabled="false"
    />
    
    <!-- Security settings -->
    <security>
      <requestFiltering removeServerHeader="true">
        <hiddenSegments>
          <add segment="node_modules" />
          <add segment="iisnode" />
        </hiddenSegments>
      </requestFiltering>
    </security>
    
    <!-- Set default documents -->
    <defaultDocument>
      <files>
        <add value="dist/index.js" />
      </files>
    </defaultDocument>
    
    <!-- Static content configuration -->
    <staticContent>
      <remove fileExtension=".js" />
      <mimeMap fileExtension=".js" mimeType="application/javascript" />
      <remove fileExtension=".json" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
    </staticContent>
  </system.webServer>
</configuration>