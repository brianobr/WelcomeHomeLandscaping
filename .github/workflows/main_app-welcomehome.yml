# Build and deploy full React TypeScript app to Azure
name: Build and Deploy React App to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Build React app and server
        run: |
          # Build the React client and Express server
          npm run build
          
          # Verify build outputs exist
          echo "Checking build outputs:"
          ls -la dist/
          ls -la dist/public/
          
          # Create deployment package
          mkdir -p deployment
          
          # Copy built server
          cp dist/index.js deployment/
          
          # Copy built client to public directory
          cp -r dist/public deployment/
          
          # Copy videos and images to public directory  
          cp -r client/public/videos deployment/public/ || echo "No videos directory"
          cp -r client/public/images deployment/public/ || echo "No images directory"
          
          # Create production package.json
          cat > deployment/package.json << EOF
          {
            "name": "welcome-home-landscaping",
            "version": "1.0.0",
            "description": "Welcome Home Landscaping and Power Washing Website",
            "main": "index.js",
            "scripts": {
              "start": "node index.js"
            },
            "engines": {
              "node": "20.x"
            },
            "dependencies": {
              "express": "^4.21.2",
              "express-session": "^1.18.1",
              "connect-pg-simple": "^10.0.0",
              "@neondatabase/serverless": "^0.10.4",
              "drizzle-orm": "^0.39.1",
              "nodemailer": "^7.0.5",
              "zod": "^3.24.2",
              "zod-validation-error": "^3.4.0"
            },
            "type": "module"
          }
          EOF
          
          # Create web.config for Azure IIS
          cat > deployment/web.config << EOF
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <webSocket enabled="false" />
              <handlers>
                <add name="iisnode" path="index.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^index.js\/debug[\/]?" />
                  </rule>
                  <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}"/>
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="index.js"/>
                  </rule>
                </rules>
              </rewrite>
              <security>
                <requestFiltering>
                  <hiddenSegments>
                    <remove segment="bin"/>
                  </hiddenSegments>
                </requestFiltering>
              </security>
              <httpErrors existingResponse="PassThrough" />
              <iisnode watchedFiles="web.config;*.js"/>
            </system.webServer>
          </configuration>
          EOF

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: deployment/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-package

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_AE2F5A84ED97453C9E4EE77CB5CC6425 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_69D25D6979004137A6F97CDED4E4ED9F }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8F44B50EF33D408FBFD31504AFCB4812 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'app-welcomeHome'
          slot-name: 'staging'
          package: '.'